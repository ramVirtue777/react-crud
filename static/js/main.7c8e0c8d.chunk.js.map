{"version":3,"sources":["App-add.js","App-delete.js","App.js","serviceWorker.js","index.js"],"names":["AddId","AppAdd","onSubmit","event","preventDefault","_this","props","onAdd","prodName","value","prodPrice","_this2","this","react_default","a","createElement","Fragment","placeholder","ref","type","Component","AppDelete","state","isEdit","onEdit","setState","onEditSubmit","name","_this$props","price","defaultValue","onClick","onDelete","className","localStorage","setItem","JSON","stringify","id","App","products","parse","getItem","getProducts","push","modified_product","filter","product","originalName","map","App_add","App_delete","Object","assign","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c8e0c8d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nvar AddId = 3;\r\n\r\nclass AppAdd extends Component {\r\n\tonSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onAdd(AddId, this.prodName.value, this.prodPrice.value);\r\n\t\tthis.prodName.value = '';\r\n\t\tthis.prodPrice.value = '';\r\n\t\tAddId++;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t<input placeholder=\"Product Name\" ref={(prodName) => (this.prodName = prodName)} />\r\n\t\t\t\t\t<input placeholder=\"Price\" ref={(prodPrice) => (this.prodPrice = prodPrice)} />\r\n\t\t\t\t\t<button type=\"submit\">Add</button>\r\n\t\t\t\t</form>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AppAdd;\r\n","import React, { Component } from 'react';\r\n\r\nclass AppDelete extends Component {\r\n\tstate = {\r\n\t\tisEdit: false\r\n\t};\r\n\r\n\tonEdit = () => {\r\n\t\tthis.setState({ isEdit: true });\r\n\t};\r\n\r\n\tonEditSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onEditSubmit(this.prodName.value, this.prodPrice.value, this.props.name);\r\n\r\n\t\tthis.setState({ isEdit: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { name, price } = this.props;\r\n\t\treturn (\r\n\t\t\t<li>\r\n\t\t\t\t{this.state.isEdit ? (\r\n\t\t\t\t\t<form onSubmit={this.onEditSubmit}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tplaceholder=\"Product Name\"\r\n\t\t\t\t\t\t\tref={(prodName) => (this.prodName = prodName)}\r\n\t\t\t\t\t\t\tdefaultValue={name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tplaceholder=\"Price\"\r\n\t\t\t\t\t\t\tref={(prodPrice) => (this.prodPrice = prodPrice)}\r\n\t\t\t\t\t\t\tdefaultValue={price}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button type=\"submit\">Save</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t<span> | </span>\r\n\t\t\t\t\t\t{price}\r\n\t\t\t\t\t\t<span> | </span>\r\n\t\t\t\t\t\t<button onClick={this.onEdit}>Edit</button>\r\n\t\t\t\t\t\t<span> | </span>\r\n\t\t\t\t\t\t<button onClick={() => this.props.onDelete(name)} className=\"delete\">\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AppDelete;\r\n","import React, { Component } from 'react';\r\nimport AppAdd from './App-add';\r\nimport AppDelete from './App-delete';\r\nimport './App.css';\r\n\r\nconst products = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: 'Ipad',\r\n\t\tprice: 'Rs.38000'\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: 'Iphone',\r\n\t\tprice: 'Rs.90000'\r\n\t}\r\n];\r\n\r\nlocalStorage.setItem('products', JSON.stringify(products));\r\n\r\nclass App extends Component {\r\n\tcomponentWillMount() {\r\n\t\tthis.getProducts();\r\n\t}\r\n\r\n\tstate = {\r\n\t\tproducts: JSON.parse(localStorage.getItem('products'))\r\n\t};\r\n\r\n\tgetProducts() {\r\n\t\treturn this.state.products;\r\n\t}\r\n\r\n\tonAdd = (id, name, price) => {\r\n\t\tconst products = this.getProducts();\r\n\t\tproducts.push({\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tprice\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tproducts\r\n\t\t});\r\n\t};\r\n\r\n\tonDelete = (name) => {\r\n\t\tconst products = this.getProducts();\r\n\t\tconst modified_product = products.filter((product) => product.name !== name);\r\n\t\tthis.setState({ products: modified_product });\r\n\t};\r\n\r\n\tonEditSubmit = (name, price, originalName) => {\r\n\t\tlet products = this.getProducts();\r\n\r\n\t\tproducts = products.map((product) => {\r\n\t\t\tif (product.name === originalName) {\r\n\t\t\t\tproduct.name = name;\r\n\t\t\t\tproduct.price = price;\r\n\t\t\t}\r\n\t\t\treturn product;\r\n\t\t});\r\n\r\n\t\tthis.setState({ products });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"products_block\">\r\n\t\t\t\t\t<h1>Products Management</h1>\r\n\r\n\t\t\t\t\t<div className=\"add_prod\">\r\n\t\t\t\t\t\t<h4>Add Product</h4>\r\n\t\t\t\t\t\t<AppAdd onAdd={this.onAdd} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{this.state.products.map((product) => (\r\n\t\t\t\t\t\t\t<AppDelete\r\n\t\t\t\t\t\t\t\tkey={product.id}\r\n\t\t\t\t\t\t\t\t{...product}\r\n\t\t\t\t\t\t\t\tonDelete={this.onDelete}\r\n\t\t\t\t\t\t\t\tonEditSubmit={this.onEditSubmit}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}